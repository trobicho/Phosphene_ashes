#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable

#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_EXT_buffer_reference2 : require

#include "marchingFold.glsl"

#define ITERATION 20

vec4    orbitTrap = vec4(1.0);

float sdf(in vec3 v)
{
    vec3    offset = v;
    float   dr = 1.2;
    float   scale = -1.3;

    for (int i = 0; i < ITERATION; i++) {
        box_fold(v, 1.0);
        sphere_fold(v, dr, 0.3, 1.5);
        v = scale * v + offset;
        orbitTrap = min(orbitTrap, abs(vec4(v,dot(v, v))));
        dr = dr * abs(scale) + 1.0;
    }
    return (length(v) / abs(dr));
}

#include "marching.glsl"

vec3  getColor(in Hit hit)
{
  vec3 color = vec3(1.0 / sqrt(hit.step * 1.0));
  return (color);
}


#include "marchingDefault.glsl"

void  main()
{
  phosDefaultEntryPoint();
}
