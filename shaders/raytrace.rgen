#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require

#include "hostDevice.h"
#include "raycommon.glsl"

layout(binding = 0, set = 0) uniform accelerationStructureEXT topLevelAS;
layout(binding = 1, set = 0, rgba32f) uniform image2D image;
//layout(set = 1, binding = eGlobals) uniform _GlobalUniforms { GlobalUniforms uni; };

layout(location = 0) rayPayloadEXT hitPayload prd;

GlobalUniforms uni2;

void main() 
{
  uni2.viewProj = mat4(0.692049, 0.707107, -0.577408, -0.57735
                  , 0, -1.41421, -0.577408, -0.57735
                  , -0.692049, 0.707107, -0.577408, -0.57735
                  , 0, 0, 3.36444, 3.4641);

  uni2.viewProj = mat4(1., 0., 0., 0.
                  , 0., 1., 0., 0.
                 , 0., 0., 1., 0.
                  , 0., 0., 0., 1.);

  uni2.viewInverse = inverse(uni2.viewProj);
  uni2.projInverse = inverse(uni2.viewInverse);

  const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
  const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
  vec2 d = inUV * 2.0 - 1.0;

  vec4 origin    = uni2.viewInverse * vec4(0, 0, 0, 1);
  vec4 target    = uni2.projInverse * vec4(d.x, d.y, 1, 1);
  vec4 direction = uni2.viewInverse * vec4(normalize(target.xyz), 0);
  
  origin = vec4(0, 0, -0.5, 1);
  target = vec4(d.x, d.y, 2, 1);
  direction = vec4(normalize(target.xyz), 0);

  uint  rayFlags = gl_RayFlagsOpaqueEXT;
  float tMin     = 0.001;
  float tMax     = 10000.0;

  traceRayEXT(topLevelAS, // acceleration structure
    rayFlags,       // rayFlags
    0xFF,           // cullMask
    0,              // sbtRecordOffset
    0,              // sbtRecordStride
    0,              // missIndex
    origin.xyz,     // ray origin
    tMin,           // ray min range
    direction.xyz,  // ray direction
    tMax,           // ray max range
    0               // payload (location = 0)
  );

  vec4 color = vec4(prd.hitValue, 1.0);
  color.xyz *= normalize(vec3(d, 1.0) * direction.xyz);
  imageStore(image, ivec2(gl_LaunchIDEXT.xy), color);
}
